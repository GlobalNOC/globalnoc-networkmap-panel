{"version":3,"sources":["scale.js"],"names":["_","d3","colorSchemes","name","value","invert","Scale","$scope","colorScheme","ctrl","panel","hexArray","rgbArray","opacity_values","downLinkColor","percentage","colors","thresholds","threshold_arr","forEach","push","parseFloat","el","unshift","length","i","color","temp","e","min","max","splice","c","hex","toString","code","charAt","slice","r","g","b","x","y","z","str","componentToHex","calculate","rgb_values","hex_values","options","legendWidth","legendOpacityScale","colorScale","scaleLinear","domain","range","scalePow","exponent","valueRange"],"mappings":"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","file":"scale.js","sourcesContent":["/*\nCopyright 2018 The Trustees of Indiana University\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport _ from \"lodash\";\nimport  * as d3 from 'd3';\n\nlet colorSchemes = [\n      {name: 'LightBlues',    value: 'interpolateLightBlues',invert: 'dark'},\n      {name: 'OrBu',    value: 'interpolateOrBu',       invert: 'dark'},\n      {name: 'RdYlGn',    value: 'interpolateRdYlGn',   invert: 'always'},\n      {name: 'Blues',     value: 'interpolateBlues',    invert: 'dark'},\n      {name: 'Greens',    value: 'interpolateGreens',   invert: 'dark'},\n      {name: 'Greys',     value: 'interpolateGreys',    invert: 'dark'},\n      {name: 'Oranges',   value: 'interpolateOranges',  invert: 'dark'},\n      {name: 'Purples',   value: 'interpolatePurples',  invert: 'dark'},\n      {name: 'Reds',      value: 'interpolateReds',     invert: 'dark'},\n      {name: 'BuGn',    value: 'interpolateBuGn',       invert: 'dark'},\n      {name: 'BuPu',    value: 'interpolateBuPu',       invert: 'dark'},\n      {name: 'GnBu',    value: 'interpolateGnBu',       invert: 'dark'},\n      {name: 'OrRd',    value: 'interpolateOrRd',       invert: 'dark'},\n      {name: 'PuBuGn',  value: 'interpolatePuBuGn',     invert: 'dark'},\n      {name: 'PuBu',    value: 'interpolatePuBu',       invert: 'dark'},\n      {name: 'PuRd',    value: 'interpolatePuRd',       invert: 'dark'},\n      {name: 'RdPu',    value: 'interpolateRdPu',       invert: 'dark'},\n      {name: 'YlGnBu',  value: 'interpolateYlGnBu',     invert: 'dark'},\n      {name: 'YlGn',    value: 'interpolateYlGn',       invert: 'dark'},\n      {name: 'YlOrBr',  value: 'interpolateYlOrBr',     invert: 'dark'},\n      {name: 'YlOrRd',  value: 'interpolateYlOrRd',     invert: 'dark'}\n];\n\nexport class Scale {\n    constructor($scope, colorScheme)  {\n        this.colorScheme = $scope.ctrl.panel.colorScheme;\n        this.hexArray = [];\n        this.rgbArray = [];\n        this.opacity_values = [];\n        this.downLinkColor = $scope.ctrl.panel.downLinkColor;\n\n    }\n\n    setColorScheme(colorScheme)  {\n        this.colorScheme = colorScheme;\n    }\n\n    getColorSchemes() {\n        return colorSchemes;\n    }\n\n    getThresholdColor(percentage, colors, thresholds) {\n        if(!colors) return;\n        let threshold_arr = [];\n        _.forEach(thresholds, el => threshold_arr.push(parseFloat(el)));\n        threshold_arr.unshift(0);\n        threshold_arr.push(100);\n        if(percentage<0) return colors[0];\n        if(percentage>100) return colors[colors.length-1];\n        for(let i = 1;i<threshold_arr.length;i++){\n            if(percentage<=threshold_arr[i]){\n                return colors[i-1];\n            }\n        }\n    }\n\n    setDownLinkColor(color) {\n        this.downLinkColor = color;\n    }\n\n    getColor(percentage) {\n        if(!percentage){\n            return this.downLinkColor;\n        }\n        if(percentage<0){\n            return this.hexArray[0];\n        }\n        for(var i=1; i < this.hexArray.length;i++){\n            if (i * (100 / this.hexArray.length) >= percentage){\n                return this.hexArray[i];\n            }\n        }\n        return this.hexArray[this.hexArray.length-1];\n    }\n\n    getOpacity(percentage, opacity_values){\n        if(percentage<0){\n            return opacity_values[0];\n        }\n        for(let i = 0;i < opacity_values.length; i++){\n            if(i*(100/opacity_values.length)>=percentage){\n                return opacity_values[i];\n            }\n        }\n        return opacity_values[opacity_values.length-1];\n    }\n    \n\n\n    getThresholdScale(thresholds, colors){\n        let temp = [];\n        _.forEach(thresholds, e => temp.push(parseFloat(e)));\n        if(_.min(temp) <= 0 || _.max(temp) >= 100) return;\n        if(thresholds[0]){\n            colors.splice(thresholds.length+1);\n        } else {\n            colors = [];\n        }\n        return colors;\n    }\n\n    componentToHex(c) {\n        var hex = c.toString(16);\n        var code = hex.length === 1 ? '0' + hex : hex;\n        return code.charAt(0) === '-'? code.slice(1,code.length):code; \n    }\n\n    calculate(r,g,b,x,y,z) {  \n        for(var i=0;i<50;i++) {\n            r=r+x;\n            g=g+y;\n            b=b+z;\n            var str='rgb('+r+','+g+','+b+')';\n            this.rgbArray.push(str);\n            this.hexArray.push(\"#\" + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b));\n        }\n    }\n\n    displayColor(color) {\n        this.rgbArray=[];\n        this.hexArray=[];\n    \tvar r=0;\n        var g=0;\n        var b=0;\n\n        switch(color) {\n            case 'interpolateLightBlues':\n                this.calculate(255,255,255,-5,-3,0);\n                break;\n            case 'interpolateOrBu':\n                this.calculate(251,174,96,-3,0,3);\n                break;\n\n            case 'interpolateRdYlGn':\n                this.calculate(255,g,b,-3,5,0);\n                break;\n\n            case 'interpolateOranges':\n                this.calculate(255,46,0,0,3,0);\n                break;\n\n            case 'interpolateGreens':\n                this.calculate(r,255,b,5,0,5);\n                break;\n\n            case 'interpolateBlues':\n                this.calculate(r,g,255,4,4,0);\n                break;\n\n            case 'interpolateReds':\n                this.calculate(250,g,b,0,5,5);\n                break;\n\n            case 'interpolateYlOrBr':\n\t            this.calculate(245,230,10,-2,-3,1);\n                break;\n\n            case 'interpolateGreys':\n                this.calculate(r,g,b,5,5,5);\n                break;\n\n            case 'interpolatePurples':\n                this.calculate(100,g,255,3,5,0);\n                break;\n\n            case 'interpolateBuGn':\n                this.calculate(r,g,255,0,5,-5);\n                break;\n\n            case 'interpolateBuPu':\n                this.calculate(r,g,255,2,0,-3);\n                break;\n\n            case 'interpolateGnBu':\n                this.calculate(r,255,b,0,-5,5);\n                break;\n\n            case 'interpolateOrRd':\n                this.calculate(205,150,b,1,-3,0);\n                break;\n\n            case 'interpolatePuBuGn':\n                this.calculate(200,g,255,-4,5,-5);\n                break;\n\n            case 'interpolatePuBu':\n                this.calculate(200,g,255,-4,3,0);\n                break;\n\n            case 'interpolatePuRd':\n                this.calculate(90,g,255,3,0,-5);\n                break;\n\n            case 'interpolateRdPu':\n                this.calculate(255,g,b,-1,0,5);\n                break;\n\n            case 'interpolateYlGn':\n                this.calculate(245,245,b,-4,0,0);\n                break;\n\n            case 'interpolateYlGnBu':\n                this.calculate(255,255,b,-3,-2,2);\n                break;\n\n            case 'interpolateYlOrRd':\n                this.calculate(255,255,b,0,-5,0);\n                break;\n\n        }\n        return {\n            rgb_values: this.rgbArray,\n            hex_values: this.hexArray\n        }\n    }\n\n    \n\n    getOpacityScale(options, legendWidth){\n        let legendOpacityScale;\n        let opacity_values = [];\n        if(options.colorScale === 'linear'){\n            legendOpacityScale = d3\n                .scaleLinear()\n                .domain([0, legendWidth])\n                .range([0,1]);\n        } else if (options.colorScale === 'sqrt') {\n            legendOpacityScale = d3\n                .scalePow()\n                .exponent(options.exponent)\n                .domain([0, legendWidth])\n                .range([0,1]);\n        }\n        let valueRange = d3.range(0, legendWidth, 22);\n        for(let i = 0; i< valueRange.length; i++){\n            opacity_values.push(legendOpacityScale(valueRange[i]));\n        }\n        return opacity_values;\n    }\n}\n"]}